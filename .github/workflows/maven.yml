name: Microservices CI/CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - charge
          - configserver
          - discovery
          - gateway
          - station
          - user
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Detect changes for ${{ matrix.service }}
        id: changes
        run: |
          git fetch --unshallow  # Fetch full commit history
          # Get the current commit SHA (latest commit)
          GITHUB_SHA=$(git rev-parse HEAD)

          # Get the previous commit SHA
          PREV_COMMIT=$(git rev-parse HEAD~1)

          # Show the list of changed files between the current commit and the previous commit
          echo "Changed files:"
          git diff --name-only $PREV_COMMIT $GITHUB_SHA

          # Check if the specific service directory has changed
          if git diff --name-only $PREV_COMMIT $GITHUB_SHA | grep -q "services/${{ matrix.service }}/"; then
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "changed=false" >> $GITHUB_ENV
          fi

      - name: Skip if no changes
        if: env.changed == 'false'
        run: echo "No changes detected for ${{ matrix.service }}."

      - name: Login to Docker Hub
        if: env.changed == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Start Dependencies
        if: env.changed == 'true'
        run: |
          docker builder prune
          docker-compose -f ./docker-compose.ci.yml up -d mongodb postgres configserver discovery user station charge gateway

      - name: Wait for Dependencies
        if: env.changed == 'true'
        run: |
          for i in {1..15}; do
            curl -s http://localhost:8888/actuator/health && break
            echo "Waiting for Config Server..."
            sleep 2
          done
          for i in {1..15}; do
            curl -s http://localhost:8761/actuator/health && break
            echo "Waiting for Discovery Server..."
            sleep 2
          done
          for i in {1..15}; do
            nc -z localhost 5432 && break
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          for i in {1..15}; do
            nc -z localhost 27017 && break
            echo "Waiting for MongoDB..."
            sleep 2
          done

      - name: Show Containers Running
        if: env.changed == 'true'
        run: |
          docker ps
          echo "Containers that are running:"
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

      - name: Run linting
        if: env.changed == 'true'
        run: |
          cd services/${{ matrix.service }}
          mvn checkstyle:checkstyle

      - name: Run unit tests
        if: env.changed == 'true'
        run: |
          cd services/${{ matrix.service }}
          mvn test

      - name: Package application
        if: env.changed == 'true'
        run: |
          cd services/${{ matrix.service }}
          mvn clean install

      - name: Set up Docker Buildx
        if: env.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image for ${{ matrix.service }}
        if: env.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./services/${{ matrix.service }}
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
